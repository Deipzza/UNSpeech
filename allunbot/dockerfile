# Usa una imagen base de Python
FROM python:3.7

# Establece el directorio de trabajo dentro del contenedor
WORKDIR /app

# Instala las dependencias necesarias para Selenium
RUN apt-get update && apt-get install -y \
    wget \
    curl \
    unzip \
    xvfb \
    libxi6 \
    libgconf-2-4 \
    default-jdk
    
# Descarga y configura el controlador de Selenium para Chrome
RUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && \
    echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list && \
    apt-get update && apt-get install -y google-chrome-stable

# Descarga y configura el controlador de ChromeDriver
RUN wget -q -O /tmp/chromedriver.zip https://chromedriver.storage.googleapis.com/113.0.5672.24/chromedriver_linux64.zip && \
    unzip /tmp/chromedriver.zip -d /usr/local/bin/ && \
    rm /tmp/chromedriver.zip

# Establece la zona horaria en el contenedor
ENV TZ=America/Bogota

# Instala las dependencias necesarias para la configuración del locale
RUN apt-get update && \
    apt-get install -y locales && \
    rm -rf /var/lib/apt/lists/* && \
    localedef -i es_CO -c -f UTF-8 -A /usr/share/locale/locale.alias es_CO.UTF-8

# Establece las variables de entorno para el locale
ENV LANG es_CO.utf8
ENV LC_ALL es_CO.utf8

# Copia el archivo requirements.txt al contenedor
COPY requirements.txt .

# Instala las dependencias del proyecto
RUN pip install --no-cache-dir -r requirements.txt

# Copia el resto de los archivos fuente al contenedor
COPY . .

# Establece las variables de entorno necesarias para la ejecución de Selenium
ENV DISPLAY=:99

# Expone el puerto en el que se ejecuta el servidor
EXPOSE 10000

# Ejecuta el servidor con Gunicorn
CMD ["gunicorn", "--bind", "0.0.0.0:10000", "bot:app", "--timeout", "4000"]